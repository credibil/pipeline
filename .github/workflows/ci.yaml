# Reusable CI workflow for Rust
# https://docs.github.com/en/actions/how-tos/reuse-automations/reuse-workflows

name: CI

on:
  workflow_call:
    inputs:
      outdated:
        description: "List of dependencies to ignore for cargo-outdated"
        type: string
    secrets:
      CARGO_REGISTRIES_CREDIBIL_TOKEN:
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
env:
  RUSTFLAGS: -Dwarnings
  CARGO_REGISTRIES_CREDIBIL_TOKEN: ${{ secrets.CARGO_REGISTRIES_CREDIBIL_TOKEN }}

jobs:
  # cache-deps:
  #   name: Cache
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v5
  #     - uses: actions/cache@v4
  #       with:
  #         path: |
  #           ~/.cargo/bin/
  #           ~/.cargo/git/db/
  #           ~/.cargo/registry/
  #           target/
  #         key: cargo-${{ hashFiles('**/Cargo.lock') }}

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: credibil/pipeline/.github/actions/cargo-cache@main
      - uses: mozilla-actions/sccache-action@v0.0.9
      - run: cargo clippy --all-features

  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: credibil/pipeline/.github/actions/cargo-cache@main
      - run: |
          rustup component add --toolchain nightly rustfmt
          cargo +nightly fmt --all --check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: credibil/pipeline/.github/actions/cargo-cache@main
      - uses: mozilla-actions/sccache-action@v0.0.9
      - uses: taiki-e/install-action@nextest
      - run: cargo nextest run --all --all-features  --no-tests=pass

  test-doc:
    name: Test docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: credibil/pipeline/.github/actions/cargo-cache@main
      - uses: mozilla-actions/sccache-action@v0.0.9
      - name: Check if library target exists
        id: lib
        run: |
          if cargo check --lib --workspace 2>&1 | grep -q 'no library targets found'; then
            echo "exists=false" >> $GITHUB_OUTPUT
          else
            echo "exists=true" >> $GITHUB_OUTPUT
          fi
      - run: cargo test --doc --all-features --workspace
        if: steps.lib.outputs.exists == 'true'

  vet:
    name: Vet
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: credibil/pipeline/.github/actions/cargo-cache@main
      - uses: mozilla-actions/sccache-action@v0.0.9
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-vet
      - run: cargo vet --locked

  miri:
    name: Miri
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: credibil/pipeline/.github/actions/cargo-cache@main
      - uses: mozilla-actions/sccache-action@v0.0.9
      - uses: dtolnay/rust-toolchain@miri
      - uses: taiki-e/install-action@nextest
      - run: |
          rustup override set nightly
          cargo miri setup
          cargo miri nextest run --no-tests=pass
        # env:
        #   MIRIFLAGS: -Zmiri-strict-provenance

  # outdated:
  #   name: Outdated
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v5
  #     - uses: credibil/pipeline/.github/actions/cargo-cache@main
  #     - uses: mozilla-actions/sccache-action@v0.0.9
  #     - uses: dtolnay/install@cargo-outdated
  #     - run: cargo outdated --workspace --depth 1 --exit-code 1
  #       if: ${{ inputs.outdated == '' }}
  #     - run: cargo outdated --workspace --depth 1 --ignore ${{ inputs.outdated }} --exit-code 1
  #       if: ${{ inputs.outdated != '' }}

  deny:
    name: Deny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: credibil/pipeline/.github/actions/cargo-cache@main
      # - uses: mozilla-actions/sccache-action@v0.0.9
      - uses: EmbarkStudios/cargo-deny-action@v2
        with:
          arguments: --workspace
